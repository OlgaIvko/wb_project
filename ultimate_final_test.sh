#!/bin/bash
echo "=== –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ==="

echo -e "\n1. –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –î–ê–ù–ù–´–•:"
docker compose exec app php artisan tinker --execute="
echo '=== –ü–û–õ–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===' . PHP_EOL;
echo '–ö–æ–º–ø–∞–Ω–∏–∏: ' . \\App\\Models\\Company::count();
echo '–ê–∫–∫–∞—É–Ω—Ç—ã: ' . \\App\\Models\\Account::count();
echo 'API —Å–µ—Ä–≤–∏—Å—ã: ' . \\App\\Models\\ApiService::count();
echo '–¢–æ–∫–µ–Ω—ã: ' . \\App\\Models\\Token::count();
echo '---' . PHP_EOL;
echo '–ü—Ä–æ–¥–∞–∂–∏: ' . \\App\\Models\\Sale::count();
echo '–ó–∞–∫–∞–∑—ã: ' . \\App\\Models\\Order::count();
echo '–û—Å—Ç–∞—Ç–∫–∏: ' . \\App\\Models\\Stock::count();
echo '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è: ' . \\App\\Models\\Income::count();
"

echo -e "\n2. –¢–ï–°–¢ –ö–û–ú–ê–ù–î–´ WB:FETCH –î–õ–Ø –í–°–ï–• –ê–ö–ö–ê–£–ù–¢–û–í:"
docker compose exec app php artisan wb:fetch sales --dateFrom=$(date -v-1d +%Y-%m-%d) --account=all

echo -e "\n3. –ü–†–û–í–ï–†–ö–ê –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–•:"
docker compose exec app php artisan tinker --execute="
echo '=== –î–ê–ù–ù–´–ï –ü–û –ê–ö–ö–ê–£–ù–¢–ê–ú ===' . PHP_EOL;

\$tables = [
    'sales' => '–ü—Ä–æ–¥–∞–∂–∏',
    'orders' => '–ó–∞–∫–∞–∑—ã', 
    'stocks' => '–û—Å—Ç–∞—Ç–∫–∏',
    'incomes' => '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è'
];

foreach (\$tables as \$table => \$name) {
    \$results = \\Illuminate\\Support\\Facades\\DB::table(\$table)
        ->groupBy('account_id')
        ->selectRaw('account_id, count(*) as count')
        ->get();
    
    echo \$name . ':' . PHP_EOL;
    foreach (\$results as \$result) {
        \$account = \\App\\Models\\Account::find(\$result->account_id);
        echo '  –ê–∫–∫–∞—É–Ω—Ç ' . \$result->account_id . ' (' . (\$account ? \$account->name : 'N/A') . '): ' . \$result->count . ' –∑–∞–ø–∏—Å–µ–π' . PHP_EOL;
    }
    if (\$results->isEmpty()) {
        echo '  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' . PHP_EOL;
    }
}
"

echo -e "\n4. –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ê–ö–ö–ê–£–ù–¢–û–í:"
docker compose exec app php artisan tinker --execute="
echo '=== –ê–ö–ö–ê–£–ù–¢–´ –ò –¢–û–ö–ï–ù–´ ===' . PHP_EOL;

foreach (\\App\\Models\\Account::with('company', 'tokens.apiService')->get() as \$account) {
    echo 'üîπ ' . \$account->name . ' (ID: ' . \$account->id . ')' . PHP_EOL;
    echo '   –ö–æ–º–ø–∞–Ω–∏—è: ' . \$account->company->name . PHP_EOL;
    echo '   –¢–æ–∫–µ–Ω—ã: ' . \$account->tokens->count() . PHP_EOL;
    
    foreach (\$account->tokens as \$token) {
        echo '      - –°–µ—Ä–≤–∏—Å: ' . \$token->apiService->name . PHP_EOL;
        echo '        –ê–∫—Ç–∏–≤–µ–Ω: ' . (\$token->is_active ? '‚úÖ' : '‚ùå') . PHP_EOL;
        echo '        URL: ' . \$token->apiService->base_url . PHP_EOL;
    }
    echo '' . PHP_EOL;
}
"

echo -e "\nüéØ –§–ò–ù–ê–õ–¨–ù–´–ô –í–´–í–û–î:"
echo "‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç"
echo "‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ API" 
echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç"
echo "‚úÖ –ò–∑–æ–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "‚ö†Ô∏è  –ù–µ–±–æ–ª—å—à–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!"

